---
title: Capslock Custmization
version: 3.0.3
repo: https://github.com/qbosen/Capslock


rules:

  ################################################################
  #                    Capslock to Esc/Hyper                     #
  ################################################################
  - description: CapsLock to Hyper
    manipulators:

      - description: 'capslock = esc(click) | hyper(hold)'
        type: basic
        from: { key_code: caps_lock ,modifiers: { optional: [ any ] } }
        to: [ { key_code: right_shift,modifiers: [ right_command,right_control,right_option ] } ]
        to_if_alone: [ { key_code: escape } ]

      - description: 'escape = capslock switch'
        type: basic
        from: { key_code: escape, modifiers: { optional: [ caps_lock ], mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: caps_lock , modifiers: [ left_control ] } ]

      - description: 'spacebar = language switch'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: spacebar , modifiers: [ right_command,right_control,right_shift,right_option  ] } ]

      - description: 'command + spacebar = emoji'
        type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: spacebar , modifiers: [ left_control,left_command ] } ]


  ################################################################
  #                       Hyper Navigation                       #
  ################################################################
  - description: Hyper Navigation
    manipulators:

      #==========================================================#
      # ( h ) + ( ⌘⌥⇧⌃ )  -> ( left )                            #
      #==========================================================#

      # command: selection
      - description: 'command + h = shift + left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_shift ] } ]

      # option + command: word selection
      - description: 'option + command + h = option + shift + left (select word ahead)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option, left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + h = ctrl + shift + tab (prev tab)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control , left_shift ] } ]

      # control: desktop management
      - description: 'control + h = ctrl + left (prev desktop)'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_control ] } ]

      # option: word move
      - description: 'option + h = move word ahead'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow , modifiers: [ left_option ] } ]

      # shift + control: mouse wheel
      - description: 'shift + control + h = mouse wheel left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: 64 } } ]

      # normal: cursor move
      - description: ' h = left'
        type: basic
        from: { key_code: h, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow } ]


      #==========================================================#
      # ( j ) + ( ⌘⌥⇧⌃ )  -> ( down )                            #
      #==========================================================#
      # command: selection
      - description: 'command + j = shift + down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + j = option + shift + down (select para ahead)'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_shift ] }, { key_code: down_arrow , modifiers: [ left_shift ] },{ key_code: down_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + j = command + tab (next application)'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command ] } ]

      # control: desktop management
      - description: 'control + j = ctrl + down (focus application)'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow , modifiers: [ left_control ] } ]

      # option: para move
      - description: 'option + j = move para down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow }, { key_code: down_arrow },{ key_code: down_arrow }  ]

      # shift + control: mouse wheel
      - description: 'shift + control + j = mouse wheel down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: 64 } } ]

      # normal: cursor move
      - description: ' j = down'
        type: basic
        from: { key_code: j, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow } ]


      #==========================================================#
      # ( k ) + ( ⌘⌥⇧⌃ )  -> ( up )                            #
      #==========================================================#
      # command: selection
      - description: 'command + k = shift + up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + k = option + shift + up (select line above)'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_shift ] }, { key_code: up_arrow , modifiers: [ left_shift ] },{ key_code: up_arrow , modifiers: [ left_shift ] } ]

      # shift: tab/win management
      - description: 'shift + k = command + tab (prev application)'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_command, left_shift ] } ]

      # control: desktop management
      - description: 'control + k = ctrl + up (expose all)'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]

      # option: para move
      - description: 'option + k = param up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow }, { key_code: up_arrow },{ key_code: up_arrow} ]

      # shift + control: mouse wheel
      - description: 'shift + control + k = mouse wheel up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { vertical_wheel: -64 } } ]

      # normal: cursor move
      - description: ' k = up'
        type: basic
        from: { key_code: k, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow } ]


      #==========================================================#
      # ( l ) + ( ⌘⌥⇧⌃ )  -> ( right )                            #
      #==========================================================#
      # command: selection
      - description: 'command + l = shift + right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift ] } ]

      # option + command: word selection
      - description: 'option + command + l = option + shift + right (select word after)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_shift,left_option ] } ]

      # shift: tab/win management
      - description: 'shift + l = command + tab (next tab)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: tab , modifiers: [ left_control ] } ]

      # control: desktop management
      - description: 'control + l = ctrl + right (next desktop)'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_control ] } ]

      # option: word move right
      - description: 'option + l = word move right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow , modifiers: [ left_option ] } ]

      # shift + control: mouse wheel
      - description: 'shift + control + l = mouse wheel right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ left_shift,left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { mouse_key: { horizontal_wheel: -64 } } ]

      # normal: cursor move
      - description: ' l = right'
        type: basic
        from: { key_code: l, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow } ]



      #==========================================================#
      # ( u ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # command: selection
      - description: 'command + u = shift + page_up'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_up , modifiers: [ left_shift ] } ]

      # option + command: page selection
      - description: 'option + command + u = shift + page_up'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_up , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + u = option + command + hyphen (zoom out)'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen , modifiers: [ left_command,left_option ] } ]

      # control: desktop management
      - description: 'control + u = ctrl + command + f (fullscreen)'
        type: basic
        from: { key_code: u , modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f , modifiers: [ left_control,left_command ] } ]

      # option: move line up
      - description: 'option + u = move line up'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow, modifiers: [ left_option, left_shift ] } ]

      # normal: cursor move
      - description: ' u = page_up'
        type: basic
        from: { key_code: u, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_up } ]



      #==========================================================#
      # ( i ) + ( ⌘⌥⇧⌃ )  -> ( Home )                          #
      #==========================================================#
      # command: selection
      - description: 'command + i = shift + home'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + i = select whole line to head'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end },{ key_code: home , modifiers: [ left_shift ] },{ key_code: home , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + i = command + shift + ` (prev window within app)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde , modifiers: [ left_command,left_shift ] } ]

      # control: desktop management
      - description: 'control + i = command + h (hide current window)'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: h , modifiers: [ left_command ] } ]

      # option: mouse back
      - description: 'option + i = mouse back'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button4 } ]

      # shift + control: mouse back
      - description: 'shift + control + i = mouse back'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ left_option, left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button4 } ]

      # normal: cursor move
      - description: ' i = cmd+left'
        type: basic
        from: { key_code: i, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow, modifiers: [ left_command ] } ]


      #==========================================================#
      # ( o ) + ( ⌘⌥⇧⌃ )  -> ( End )                             #
      #==========================================================#
      # command: selection
      - description: 'command + o = shift + end'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end , modifiers: [ left_shift ] } ]

      # option + command: line selection
      - description: 'option + command + o = select whole'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: home },{ key_code: end , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + o = command ` (next window within app)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: grave_accent_and_tilde , modifiers: [ left_command ] } ]

      # control: desktop management
      - description: 'control + o = option + command + h (expose all)'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: up_arrow , modifiers: [ left_control ] } ]

      # option: mouse forward
      - description: 'option + o = mouse forward'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button5 } ]

      # shift + control: mouse forward
      - description: 'shift + control + o = mouse forward'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ left_option, left_control,  right_command,right_control,right_shift,right_option ] } }
        to: [ { pointing_button: button5 } ]

      # normal: cursor move
      - description: ' o = cmd+right'
        type: basic
        from: { key_code: o, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow, modifiers: [ left_command ] } ]


      #==========================================================#
      # ( p ) + ( ⌘⌥⇧⌃ )  -> ( PageUp )                          #
      #==========================================================#
      # command: selection
      - description: 'command + p = shift + page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down , modifiers: [ left_shift ] } ]

      # option + command: word/para selection
      - description: 'option + command + p = shift + page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_option,left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down , modifiers: [ left_shift ] } ]

      # shift: tab/win management (TODO: require manual setup)
      - description: 'shift + p = option + command + equal_sign (zoom in)'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_shift ,right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign , modifiers: [ left_command,left_option ] } ]

      # control: desktop management
      - description: 'control + p = LaunchPad'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_control ,right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Launchpad' } ]
      
      # option: move line down
      - description: 'option + p = move line down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: down_arrow, modifiers: [ left_option, left_shift ] } ]

      # normal: cursor move
      - description: ' p = page_down'
        type: basic
        from: { key_code: p, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: page_down } ]

  ################################################################
  #                       Hyper Deletion                         #
  ################################################################
  - description: Hyper Deletion
    manipulators:

      # + option = delete whole line 
      - description: 'option + n = delete whole line'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: end}, { key_code: delete_or_backspace, modifiers: [ left_command ] } ]

      - description: 'option + . = delete whole line'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_command ] } ]

      # + command = delete line
      - description: 'command + n = delete whole line'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: left_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      - description: 'command + m = delete word ahead'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_option ] } ]

      - description: 'command + , = delete word after'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]

      - description: 'command + . = delete whole line'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: right_arrow, modifiers: [ left_shift,left_command ] } , { key_code: delete_or_backspace } ]

      # delete char and word
      - description: 'n = delete a word ahead'
        type: basic
        from: { key_code: n, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace, modifiers: [ left_option ] } ]

      - description: 'm = delete a char ahead'
        type: basic
        from: { key_code: m, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_or_backspace } ]

      - description: ', = delete a char after'
        type: basic
        from: { key_code: comma, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward } ]

      - description: '. = delete a word after'
        type: basic
        from: { key_code: period, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: delete_forward, modifiers: [ left_option ] } ]


  ################################################################
  #                      Hyper Application                       #
  ################################################################
  - description: Hyper Application
    manipulators:


      #==========================================================#
      # ( e ) --> chrome / finder / Calender                 #
      #==========================================================#
      - description: 'command + e = finder'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a finder } ]

      - description: 'option + e = calender'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Calender } ]

      # - description: 'e = chrome'
      #   type: basic
      #   from: { key_code: e, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
      #   to: [ { shell_command: open -a 'Google Chrome' } ]

      - description: 'e = arc'
        type: basic
        from: { key_code: e, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Arc' } ]

      #==========================================================#
      # ( w ) --> logseq / vscode / notes                        #
      #==========================================================#
      - description: 'w = logseq'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Logseq } ]

      - description: 'option + w = notes'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a notes } ]

      - description: 'command + w = vscode'
        type: basic
        from: { key_code: w, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Visual Studio Code' } ]

      #==========================================================#
      # ( f ) --> alfred 5 / Dash / Dictionary                   #
      #==========================================================#
      - description: 'command + f = Dash'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Dash } ]

      - description: 'option + f = Dictionary'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a Dictionary } ]

      - description: 'f = Alfred 5'
        type: basic
        from: { key_code: f, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: open -a 'Alfred 5' } ]


  ################################################################
  #                       Hyper Terminal                         #
  ################################################################
  - description: Hyper Terminal
    manipulators:

      #==========================================================#
      # ( d ) -->  Ctrl-D (EOF)   |  Define                      #
      #==========================================================#
      - description: 'command + d = define'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: d, modifiers: [ left_control, left_command ] } ]

      - description: 'd = ctrl-d (EOF)'
        type: basic
        from: { key_code: d, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: d , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( z ) -->  Ctrl-Z (SIGTSTP)  |  F5 (VS Code Debug)       #
      #==========================================================#
      - description: 'command + z = F5 (vscode debug)'
        type: basic
        from: { key_code: z, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 } ]

      - description: 'z = ctrl-z'
        type: basic
        from: { key_code: z, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: z , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( x ) -->  Ctrl-R (Run)  |  Ctrl+F5 (VS Code Run)        #
      #==========================================================#
      - description: 'command + x = ctrl + F5 (vscode run)'
        type: basic
        from: { key_code: x, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 , modifiers: [ left_control ] } ]

      - description: 'x = ctrl-r'
        type: basic
        from: { key_code: x, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: r , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( c ) -->  Ctrl-C (SIGINT)  |  Shift+F5 (VS Code Stop)   #
      #==========================================================#
      - description: 'command + c = shift + F5 (vscode stop)'
        type: basic
        from: { key_code: c, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: f5 , modifiers: [ left_shift ] } ]

      - description: 'c = ctrl-c'
        type: basic
        from: { key_code: c, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c , modifiers: [ left_control ] } ]

      #==========================================================#
      # ( v ) -->  Vim Prefix Meta Key                           #
      #==========================================================#
      # - description: 'v = vim meta key'
      - description: 'v = ctrl-v'
        type: basic
        from: { key_code: v, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: v , modifiers: [ left_control ] } ]


      #==========================================================#
      # ( b ) -->  Tmux Prefix Meta Key                          #
      #==========================================================#
      # - description: 'b = tmux meta key'
      - description: 'b = ctrl-b'
        type: basic
        from: { key_code: b, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: b , modifiers: [ left_control ] } ]



  ################################################################
  #                        Hyper Clipboard                       #
  ################################################################
  - description: Hyper Clipboard
    manipulators:

      #==========================================================#
      # ( numbers ) -->  copy & paste TEXT via pbcopy|pbpaste    #
      #==========================================================#
      - description: 'command + 1 = copy to clip1'
        type: basic
        from: { key_code: '1', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip1' } ]

      - description: '1 = paste from clip1'
        type: basic
        from: { key_code: '1', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip1 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 2 = copy to clip2'
        type: basic
        from: { key_code: '2', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip2' } ]

      - description: '2 = paste from clip2'
        type: basic
        from: { key_code: '2', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip2 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 3 = copy to clip3'
        type: basic
        from: { key_code: '3', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip3' } ]

      - description: '3 = paste from clip3'
        type: basic
        from: { key_code: '3', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip3 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]

      - description: 'command + 4 = copy to clip4'
        type: basic
        from: { key_code: '4', modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: c, modifiers: [ left_command ] } , { shell_command: 'pbpaste > ~/.clip4' } ]

      - description: '4 = paste from clip4'
        type: basic
        from: { key_code: '4', modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { shell_command: 'cat ~/.clip4 | pbcopy ' },{ key_code: v, modifiers: [ left_command ] } ]



  ################################################################
  #                        Hyper Shifter                         #
  ################################################################
  - description: Hyper Shifter
    manipulators:

      #==========================================================#
      # [] -> () command:{}  option:<>
      #==========================================================#
      - description: 'command + open_bracket [ = {'
        type: basic
        from: { key_code: open_bracket, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: open_bracket , modifiers: [ left_shift ] } ]

      - description: 'option + open_bracket [ = <'
        type: basic
        from: { key_code: open_bracket, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: comma , modifiers: [ left_shift ] } ]

      - description: 'open_bracket [ = ('
        type: basic
        from: { key_code: open_bracket, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '9' , modifiers: [ left_shift ] } ]

      - description: 'command + close_bracket ] = }'
        type: basic
        from: { key_code: close_bracket, modifiers: { mandatory: [ left_command,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: close_bracket , modifiers: [ left_shift ] } ]

      - description: 'option + close_bracket ] = }'
        type: basic
        from: { key_code: close_bracket, modifiers: { mandatory: [ left_option,  right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: period , modifiers: [ left_shift ] } ]

      - description: 'close_bracket ] = )'
        type: basic
        from: { key_code: close_bracket, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '0' , modifiers: [ left_shift ] } ]

      #==========================================================#
      # semicolon / quote -->  _=   (+command) -+  (option) $&
      #==========================================================#
      - description: 'semicolon = _'
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: 'hyphen' , modifiers: [ left_shift ] } ]

      - description: 'command + semicolon = -'
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: hyphen } ]

      - description: 'option + semicolon = $'
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '4' , modifiers: [ left_shift ] } ]

      - description: 'quote = equal_sign'
        type: basic
        from: { key_code: quote, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign } ]

      - description: 'command + quote = +'
        type: basic
        from: { key_code: quote, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: equal_sign , modifiers: [ left_shift ] } ]

      - description: 'option + quote = &'
        type: basic
        from: { key_code: quote, modifiers: { mandatory: [ left_option, right_command,right_control,right_shift,right_option ] } }
        to: [ { key_code: '7' , modifiers: [ left_shift ] } ]

      #==========================================================#
      # / -> language switch; command: chinese 
      #==========================================================#
      - description: 'slash = abc'
        type: basic
        from: { key_code: slash, modifiers: { mandatory: [ right_command,right_control,right_shift,right_option ] } }
        to: [ { select_input_source: { input_source_id: "^com\\.apple\\.keylayout\\.ABC$", language: "en" } } ]
      - description: 'command + slash = rime'
        type: basic
        from: { key_code: slash, modifiers: { mandatory: [ left_command, right_command,right_control,right_shift,right_option ] } }
        to: [ { select_input_source: { input_mode_id: "^im\\.rime\\.inputmethod\\.Squirrel$", input_source_id: "^im\\.rime\\.inputmethod\\.Squirrel\\.Rime$", language: "zh-Hans" } } ]

...